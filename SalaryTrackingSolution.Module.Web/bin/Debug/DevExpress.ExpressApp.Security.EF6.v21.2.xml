<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <assembly>
    <name>DevExpress.ExpressApp.Security.EF6.v21.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.ExpressApp.Security.EF.Adapters">
      <summary>
        <para>Contains classes and interfaces specific to the Entity Framework Security Permissions Caching functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter">
      <summary>
        <para>A Security Adapter used in Entity Framework based applications with the UI-level security.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter.CreateRealObjectSpace(DevExpress.ExpressApp.IObjectSpace)">
      <summary />
      <param name="objectSpace"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter.GetRealObject(System.Object,DevExpress.ExpressApp.IObjectSpace,DevExpress.ExpressApp.IObjectSpace@)">
      <summary />
      <param name="targetObject"></param>
      <param name="objectSpace"></param>
      <param name="realObjectSpace"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter.GetRealObjectSpace(DevExpress.ExpressApp.IObjectSpace)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider">
      <summary>
        <para>A Security Adapter Provider used to register the <see cref="T:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapter"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.#ctor(DevExpress.ExpressApp.Security.Adapters.ISecurityPermissionsProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider"/> class with specified settings.</para>
      </summary>
      <param name="securityProvider"></param>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.CanHandle(DevExpress.ExpressApp.IObjectSpace)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.CreatePermissionDictionary(DevExpress.ExpressApp.IObjectSpace,System.Type,System.Object)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <param name="userType"></param>
      <param name="userID"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.CreateSecurityAdapter">
      <summary>
        <para>For internal use.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.GetScopeKey(DevExpress.ExpressApp.IObjectSpace)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.GetSecuritySystemMode(DevExpress.ExpressApp.IObjectSpace)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.GetUnitOfWork(DevExpress.ExpressApp.IObjectSpace)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.Security.EF.Adapters.EFCachedRequestSecurityAdapterProvider.GetUpdatedPermissionsProvider(DevExpress.ExpressApp.IObjectSpace,System.Type,System.Object)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="objectSpace"></param>
      <param name="providerType"></param>
      <param name="providerId"></param>
      <returns></returns>
    </member>
    <member name="N:DevExpress.Persistent.BaseImpl.EF">
      <summary>
        <para>Contains ready-to-use Entity Framework 6 classes that form the Business Class Library.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Persistent.BaseImpl.EF.Role">
      <summary>
        <para>An entity that defines the security role.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission(System.Type,System.String,System.String)">
      <summary>
        <para>Adds the specified member access permissions to the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> instance.</para>
      </summary>
      <param name="type">A type of the business object for which the member access permissions are added.</param>
      <param name="memberName">A string which is a semicolon-separated member name list, for which the member access permissions are added.</param>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
      <returns>The SecuritySystemMemberPermissionsObject object that specifies the role’s permissions.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission(System.Type,System.String,System.String,System.String)">
      <summary>
        <para>Adds the specified member access permissions to the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> instance.</para>
      </summary>
      <param name="type">A type of the business object for which the member access permissions are added.</param>
      <param name="memberName">A string which is a semicolon-separated member name list, for which the member access permissions are added.</param>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
      <param name="criteria">A string which is a critera matching the target objects.</param>
      <returns>The SecuritySystemMemberPermissionsObject object that specifies the role’s permissions.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission``1(System.String,System.String)">
      <summary>
        <para>Adds the specified member access permissions to the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> instance.</para>
      </summary>
      <param name="memberName">A string which is a semicolon-separated member name list, for which the member access permissions are added.</param>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
      <typeparam name="T"></typeparam>
      <returns>The SecuritySystemMemberPermissionsObject object that specifies the role’s permissions.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission``1(System.String,System.String,System.String)">
      <summary>
        <para>Adds the specified member access permissions to the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> instance.</para>
      </summary>
      <param name="memberName">A string which is a semicolon-separated member name list, for which the member access permissions are added.</param>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
      <param name="criteria">A string which is a critera matching the target objects.</param>
      <typeparam name="T"></typeparam>
      <returns>The SecuritySystemMemberPermissionsObject object that specifies the role’s permissions.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddObjectAccessPermission(System.Type,System.String,System.String)">
      <summary>
        <para>Adds the specified object access permissions to the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> instance.</para>
      </summary>
      <param name="type">The type of business object for which object access permissions are added.</param>
      <param name="criteria">A string which is the critera matching the target objects.</param>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddObjectAccessPermission``1(System.String,System.String)">
      <summary>
        <para>Adds the specified object access permissions to the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> instance.</para>
      </summary>
      <param name="criteria">A string which is the critera matching the target objects.</param>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.AutoAssociationPermissions">
      <summary>
        <para>Specifies, whether or not the required permissions are automatically configured for associated objects/collections.</para>
      </summary>
      <value>true, if permissions are automatically configured for associations, otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.CanEditModel">
      <summary>
        <para>Specifies whether users associated with the current role can use the Model Editor.</para>
      </summary>
      <value>true, if users associated with the current role can use the Model Editor; otherwise - false.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.ChildRoles">
      <summary>
        <para>Gets the current role’s child roles list.</para>
      </summary>
      <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>&gt; collection which is the list of the current role’s child roles.</value>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.FindTypePermissionObject(System.Type)">
      <summary>
        <para>Returns a TypePermissionObject object specifying type permissions for the given type, or null, if there is no such object in the <see cref="P:DevExpress.Persistent.BaseImpl.EF.Role.TypePermissions"/> list.</para>
      </summary>
      <param name="type">A type of the business object for which the TypePermissionObject object is determined.</param>
      <returns>The TypePermissionObject object specifying type permissions for the given type.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.FindTypePermissionObject``1">
      <summary>
        <para>Returns a TypePermissionObject object specifying type permissions for the given type, or null, if there is no such object in the <see cref="P:DevExpress.Persistent.BaseImpl.EF.Role.TypePermissions"/> list.</para>
      </summary>
      <typeparam name="T"></typeparam>
      <returns>The TypePermissionObject object specifying type permissions for the given type.</returns>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.ID">
      <summary>
        <para>Specifies the <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/> identifier.</para>
      </summary>
      <value>An integer which is the entity identifier.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.IsAdministrative">
      <summary>
        <para>Specifies whether users associated with the current role are administrators.</para>
      </summary>
      <value>true, if users associated with the current role are administrators; otherwise - false.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.Name">
      <summary>
        <para>Specifies the name of the security role.</para>
      </summary>
      <value>A string which is the name of the security role.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.ParentRoles">
      <summary>
        <para>Gets the current role’s master roles list.</para>
      </summary>
      <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>&gt; collection which is the list of the current role’s master roles.</value>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetAssociationMemberPermissions(DevExpress.Persistent.BaseImpl.EF.TypePermissionObject,DevExpress.Persistent.BaseImpl.EF.SecuritySystemMemberPermissionsObject,System.String)">
      <summary>
        <para>Sets the member permissions for associations.</para>
      </summary>
      <param name="typePermissionObject">The TypePermissionObject object specifying type permissions.</param>
      <param name="memberPermissionObject">The SecuritySystemMemberPermissionsObject object that specifies the member permissions.</param>
      <param name="operations">A string which is a semicolon-separated list of security operations to be allowed.</param>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetAssociationTypePermissions(DevExpress.Persistent.BaseImpl.EF.TypePermissionObject,System.String)">
      <summary>
        <para>Sets type permissions for associations.</para>
      </summary>
      <param name="typePermissionObject">The TypePermissionObject object specifying type permissions.</param>
      <param name="operations">A string which is a semicolon-separated list of security operations to be allowed.</param>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissions(System.Type,System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
      <summary>
        <para>Sets type permissions for the specified business object type.</para>
      </summary>
      <param name="type">A type of the business object for which type permissions are set.</param>
      <param name="operations">A string which is a semicolon-separated list of security operations to be allowed.</param>
      <param name="securitySystemModifier">A value of the SecuritySystemModifier enumeration collection, which is an allow or deny security system modifier.</param>
      <returns>The TypePermissionObject object specifying type permissions.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissions``1(System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
      <summary>
        <para>Sets the permissions for the business object.</para>
      </summary>
      <param name="operations">A string which is a semicolon-separated security operation list to be allowed.</param>
      <param name="securitySystemModifier">A SecuritySystemModifier enumeration value.</param>
      <typeparam name="T"></typeparam>
      <returns>The TypePermissionObject object representing permissions for the target type.</returns>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissionsRecursively(System.Type,System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
      <summary>
        <para>Sets the permissions for the target type and all its persistent descendants.</para>
      </summary>
      <param name="targetType">A type of the business object for which the permissions are set recursively.</param>
      <param name="operations">A string which is a semicolon-separated list of security operations list to be allowed.</param>
      <param name="modifier">A SecuritySystemModifier enumeration value.</param>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissionsRecursively``1(System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
      <summary>
        <para>Sets the permissions for the target type and all its persistent descendants.</para>
      </summary>
      <param name="operations">A string which is a semicolon-separated list of security operations to be allowed.</param>
      <param name="modifier">A SecuritySystemModifier enumeration value.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.TypePermissions">
      <summary>
        <para>Gets the list of objects which contain type permissions associated with the current <see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>.</para>
      </summary>
      <value>An IList&lt;TypePermissionObject&lt;, which is the list of the TypePermissionObject objects which are type permissions associated with the current role.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.Users">
      <summary>
        <para>A list of users associated with the current role.</para>
      </summary>
      <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.User"/>&gt; collection which is the list of users associated with the current role.</value>
    </member>
    <member name="T:DevExpress.Persistent.BaseImpl.EF.User">
      <summary>
        <para>An XAF user who has a list of associated security roles.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.User.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Persistent.BaseImpl.EF.User"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.User.ChangePasswordOnFirstLogon">
      <summary>
        <para>Specifies whether the user must change password on the next logon.</para>
      </summary>
      <value>true, if the user must change password on the next logon; otherwise - false.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.User.ID">
      <summary>
        <para>Specifies the <see cref="T:DevExpress.Persistent.BaseImpl.EF.User"/> identifier.</para>
      </summary>
      <value>An integer which is the entity identifier.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.User.IsActive">
      <summary>
        <para>Specifies if a user is allowed to logon.</para>
      </summary>
      <value>true if a user is active; otherwise - false.</value>
    </member>
    <member name="E:DevExpress.Persistent.BaseImpl.EF.User.PropertyChanged">
      <summary>
        <para>Occurs when the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.ChangePasswordOnFirstLogon"/> property value is modified.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.User.Roles">
      <summary>
        <para>A list of roles associated with the current user.</para>
      </summary>
      <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>&gt; collection which is the list of roles associated with the current user.</value>
    </member>
    <member name="F:DevExpress.Persistent.BaseImpl.EF.User.ruleId_RoleRequired">
      <summary>
        <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.Roles"/> property to have a value.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Persistent.BaseImpl.EF.User.ruleId_UserNameIsUnique">
      <summary>
        <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.UserName"/> value to be unique.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Persistent.BaseImpl.EF.User.ruleId_UserNameRequired">
      <summary>
        <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.UserName"/> property to have a value.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Persistent.BaseImpl.EF.User.SetPassword(System.String)">
      <summary>
        <para>Changes the user password.</para>
      </summary>
      <param name="password">A string which is a new password.</param>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.User.StoredPassword">
      <summary>
        <para>Specifies the encrypted password stored in the database.</para>
      </summary>
      <value>A string which is the encrypted password.</value>
    </member>
    <member name="P:DevExpress.Persistent.BaseImpl.EF.User.UserName">
      <summary>
        <para>Specifies the user’s login name.</para>
      </summary>
      <value>A string which is the user’s login name.</value>
    </member>
  </members>
</doc>