<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <assembly>
    <name>DevExpress.ExpressApp.EF6.v21.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.ExpressApp.EF">
      <summary>
        <para>Contains classes that provide the Entity Framework 6 support.</para>
      </summary>
    </member>
    <member name="T:DevExpress.ExpressApp.EF.EFDataView">
      <summary>
        <para>A lightweight read-only list of data records (a data view) retrieved from a database without loading complete Entity Framework objects. Can be queried much more quickly than a real objects collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFDataView.#ctor(DevExpress.ExpressApp.EF.EFObjectSpace,System.Type,System.Collections.Generic.IList{DevExpress.ExpressApp.Utils.DataViewExpression},DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFDataView"/> class with the specified settings. Data view columns are specified via the IList&lt;<see cref="T:DevExpress.ExpressApp.Utils.DataViewExpression"/>&gt; list.</para>
      </summary>
      <param name="objectSpace">An <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> object used to access data in XAF applications based on Entity Framework data model.</param>
      <param name="objectType">The Type of requested entity objects.</param>
      <param name="expressions">An IList&lt;<see cref="T:DevExpress.ExpressApp.Utils.DataViewExpression"/>&gt; list that specifies data view column names and expressions used to compute column values. These column names can be used for sorting the data view via the sorting parameters.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies criteria associated with the data view.</param>
      <param name="sorting">An IList&lt;<see cref="T:DevExpress.Xpo.SortProperty"/>&gt; collection whose elements identify the sorted columns within the data view.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFDataView.#ctor(DevExpress.ExpressApp.EF.EFObjectSpace,System.Type,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFDataView"/> class with the specified settings. Data view columns are specified via the semicolon-separated list of expression strings. For internal use only.</para>
      </summary>
      <param name="objectSpace">An <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> object used to access data in XAF applications based on Entity Framework data model.</param>
      <param name="objectType">The Type of requested entity objects.</param>
      <param name="expressions">A string that contains a semicolon separated list of expressions that specify data view column values.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies criteria associated with the data view.</param>
      <param name="sorting">An IList&lt;<see cref="T:DevExpress.Xpo.SortProperty"/>&gt; collection whose elements identify the sorted columns within the data view.</param>
    </member>
    <member name="T:DevExpress.ExpressApp.EF.EFDataViewRecord">
      <summary>
        <para>A EF-oriented class that represents a lightweight read-only data record (a data view) retrieved from a database without loading a complete business object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFDataViewRecord.#ctor(DevExpress.ExpressApp.EF.EFDataView,System.Data.Common.DbDataRecord)">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> class.</para>
      </summary>
      <param name="dataView">A <see cref="T:DevExpress.ExpressApp.EF.EFDataView"/> collection in which a new DbDataRecord object is placed.</param>
      <param name="dbDataRecord">A DbDataRecord object that is a record to be placed in the EFDataView collection.</param>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFDataViewRecord.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> object with the specified index from the <see cref="T:DevExpress.ExpressApp.EF.EFDataView"/> collection.</para>
      </summary>
      <param name="index">An integer specifying the index of the <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> object to be returned.</param>
      <value>The <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> object with the specified index.</value>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFDataViewRecord.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> object with the specified name from the <see cref="T:DevExpress.ExpressApp.EF.EFDataView"/> collection.</para>
      </summary>
      <param name="name">The string specifying the name of the <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> object to be returned.</param>
      <value>The <see cref="T:DevExpress.ExpressApp.EF.EFDataViewRecord"/> object with the specified name.</value>
    </member>
    <member name="T:DevExpress.ExpressApp.EF.EFObjectSpace">
      <summary>
        <para>An Object Space which is used for data manipulation via the Entity Framework.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.#ctor(DevExpress.ExpressApp.DC.ITypesInfo,DevExpress.ExpressApp.EF.EFTypeInfoSource,DevExpress.ExpressApp.EF.CreateObjectContextHandler)">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> class.</para>
      </summary>
      <param name="typesInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object providing access to XAF-related information on business classes.</param>
      <param name="typeInfoSource">An EFTypeInfoSource object that provides information on business classes related to the Entity Framework.</param>
      <param name="createObjectContextDelegate">A CreateObjectContextHandler object that is a delegate encapsulating a method for creating an ObjectContext for the current Object Space.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.#ctor(DevExpress.ExpressApp.DC.ITypesInfo,DevExpress.ExpressApp.EF.EFTypeInfoSource,DevExpress.ExpressApp.EF.CreateObjectContextHandler,DevExpress.ExpressApp.EF.UpdateSchemaHandler)">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> class.</para>
      </summary>
      <param name="typesInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object providing access to XAF-related information on business classes.</param>
      <param name="typeInfoSource">An EFTypeInfoSource object that provides Entity Framework - related information on business classes.</param>
      <param name="createObjectContextDelegate">A CreateObjectContextHandler object that is a delegate encapsulating a method for creating an ObjectContext for the current Object Space.</param>
      <param name="updateSchemaDelegate">A UpdateSchemaHandler object that is a delegate encapsulating a method for updating schema.</param>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.AllowUpdateSchema">
      <summary>
        <para>Indicates whether or not a schema update is allowed.</para>
      </summary>
      <value>false, when the UpdateSchemaHandler object passed to the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> constructor is not null; otherwise - true.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.ApplyCriteria(System.Object,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Filters the specified collection according to the specified criteria on the server side.</para>
      </summary>
      <param name="collection">An Object that is the collection to be filtered.</param>
      <param name="criteria">A DevExpress.Data.Filtering.CriteriaOperator object that specifies the criteria used to filter objects on the server side.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.ApplyFilter(System.Object,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Filters a particular collection on the client side.</para>
      </summary>
      <param name="collection">A collection to be filtered.</param>
      <param name="filter">A DevExpress.Data.Filtering.CriteriaOperator object that specifies the criteria used to filter objects.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CanApplyCriteria(System.Type)">
      <summary>
        <para>Indicates whether collections of a particular type can be filtered on the server side.</para>
      </summary>
      <param name="collectionType">A <see cref="T:System.Type"/> object specifying the type of collections whose server-side filtering capability must be determined.</param>
      <returns>true, if collections of the specified type can be filtered on the server side; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CanApplyFilter(System.Object)">
      <summary>
        <para>Indicates whether a particular collection can be filtered on the client side.</para>
      </summary>
      <param name="collection">A collection that is tested on whether it can be filtered.</param>
      <returns>false</returns>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.CanFilterByNonPersistentMembers">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.Connection">
      <summary>
        <para>Gets the connection to the underlying data source.</para>
      </summary>
      <value>An IDbConnection object that is the connection to the underlying data source.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.Contains(System.Object)">
      <summary>
        <para>Indicates whether a specified object belongs to the current Object Space.</para>
      </summary>
      <param name="obj">A persistent object to be tested.</param>
      <returns>true if the specified persistent object belongs to the current Object Space; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CreateInstantFeedbackCollection(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates an InstantFeedback mode collection that contains the specified type objects filtered according to the criteria.</para>
      </summary>
      <param name="objectType">The type of objects to be added to the collection.</param>
      <param name="criteria">The criteria used to filter objects to be added to the collection.</param>
      <returns>An InstantFeedback mode collection that contains the specified type objects filtered according to the criteria.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CreateNestedObjectSpace">
      <summary>
        <para>Creates a nested Object Space.</para>
      </summary>
      <returns>An IObjectSpace object which is supposed to be created.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CreateObject(System.Type)">
      <summary>
        <para>Creates an object of the specified type.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object which is the type of the object to be created.</param>
      <returns>A created object of the specified type.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CreateParseCriteriaScope">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.CreateServerCollection(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates and initializes a new instance of the EFServerCollection class with criteria-specific options.</para>
      </summary>
      <param name="objectType">The type of persistent objects to include into the collection.</param>
      <param name="criteria">The DevExpress.Data.Filtering.CriteriaOperator that specifies the criteria for object selection in a data store.</param>
      <returns>A server collection that includes the persistent objects of the specified type. In addition, only objects that satisfy the specified criteria will be retrieved to this collection.</returns>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.Database">
      <summary>
        <para>Gets the name of the database used when a connection associated with the current Object Space’s <see cref="P:DevExpress.ExpressApp.EF.EFObjectSpace.ObjectContext"/> is opened.</para>
      </summary>
      <value>A string that is the name of the database used when a connection is opened.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.Dispose">
      <summary>
        <para>Releases all resources used by an <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.Evaluate(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified criteria for business objects of the given type.</para>
      </summary>
      <param name="objectType">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
      <returns>A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> object which is the type of objects to search for.</param>
      <param name="criteria">A DevExpress.Data.Filtering.CriteriaOperator descendant which is the criteria for matching persistent objects.</param>
      <param name="inTransaction">A boolean value. It is not used during the search.</param>
      <returns>An object which is the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if there is no persistent object which matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.FirstOrDefault``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
      <summary>
        <para>Searches for the first object that matches the specified lambda expression. The generic parameter determines the object’s type. This method takes uncommitted changes into account.</para>
      </summary>
      <param name="criteriaExpression">A lambda expression to search for an object.</param>
      <param name="inTransaction">true if the method takes unsaved changes into account; otherwise, false.</param>
      <typeparam name="ObjectType">The <see cref="T:System.Type"/> of an object to be returned.</typeparam>
      <returns>The first object that matches the specified lambda expression.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetCollectionObjectType(System.Object)">
      <summary />
      <param name="collection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetCollectionSorting(System.Object)">
      <summary>
        <para>Returns the sort settings for a particular collection.</para>
      </summary>
      <param name="collection">An Object that is the collection whose sort settings are requested.</param>
      <returns>A list of SortProperty objects specifying the sort order for the collection.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetCriteria(System.Object)">
      <summary>
        <para>Returns the criteria used to filter a particular collection on the server side.</para>
      </summary>
      <param name="collection">A collection whose server-side filter must be retrieved.</param>
      <returns>A DevExpress.Data.Filtering.CriteriaOperator object that specifies the criteria used to filter objects on the server side.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetDefaultDisplayableMembers(DevExpress.ExpressApp.DC.ITypeInfo)">
      <summary>
        <para>Returns the list of default displayable members declared in the specified type.</para>
      </summary>
      <param name="typeInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> object that supplies metadata information on a type.</param>
      <returns>An IList&lt;IMemberInfo&gt; list of default displayable members.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetDisplayableProperties(System.Object)">
      <summary>
        <para>Gets the properties considered visible by the specified collection.</para>
      </summary>
      <param name="collection">A collection whose visible properties will be retrieved.</param>
      <returns>A semicolon-separated list of property names considered visible by a particular collection.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetEvaluatorContextDescriptor(System.Type)">
      <summary>
        <para>Creates an instance of the EvaluatorContextDescriptor that is used to supply metadata on the specified type to the ExpressionEvaluator objects.</para>
      </summary>
      <param name="type">An EvaluatorContextDescriptor object initialized for the specified type.</param>
      <returns>A type for which an instance of the EvaluatorContextDescriptor class must be created.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetFilter(System.Object)">
      <summary>
        <para>Returns null (Nothing in VB).</para>
      </summary>
      <param name="collection">A collection to be tested.</param>
      <returns>A null value.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetKeyPropertyName(System.Type)">
      <summary />
      <param name="objectType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetListServer(System.Object)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="collection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetObject(System.Object)">
      <summary>
        <para>Retrieves an object from another Object Space to the current Object Space.</para>
      </summary>
      <param name="obj">An object that represents a template object from another Object Space.</param>
      <returns>An object retrieved from the database via the current Object Space.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetObjectByKey(System.Type,System.Object)">
      <summary>
        <para>Returns the persistent object that has the specified value for its key property.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object which is the type of the object to search for.</param>
      <param name="key">An object that is the persistent object’s key property value.</param>
      <returns>A persistent object with the specified value for its key property.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetObjectsQuery``1(System.Boolean)">
      <summary>
        <para>Gets a queryable data structure that provides functionality to evaluate queries against a specific business object type.</para>
      </summary>
      <param name="inTransaction">This parameter has no effect in <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/>. It is added only to provide compatibility with <see cref="M:DevExpress.ExpressApp.IObjectSpace.GetObjectsQuery``1(System.Boolean)"/>.</param>
      <typeparam name="T"></typeparam>
      <returns>An <see cref="T:System.Linq.IQueryable`1"/> object that provides functionality to evaluate queries against a specific business object type.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetObjectsToDelete(System.Boolean)">
      <summary>
        <para>Returns a collection of persistent objects that are marked as deleted in the current object context.</para>
      </summary>
      <param name="includeParent">A boolean value. It is not used during the request for the objects to delete.</param>
      <returns>A <see cref="T:System.Collections.ICollection"/> object representing the collection of persistent objects that are deleted in the transaction currently in progress.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetObjectsToSave(System.Boolean)">
      <summary>
        <para>Returns a collection of persistent objects that are added, deleted or modified in the current object context.</para>
      </summary>
      <param name="includeParent">A boolean value. It is not used during the request for the objects to save.</param>
      <returns>The collection of persistent objects that are added, deleted or modified in the transaction currently in progress.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetReferenceMemberNames(DevExpress.ExpressApp.DC.ITypeInfo,System.Collections.Generic.IList{System.String})">
      <summary>
        <para>Returns the list of reference members’ names declared in the specified type.</para>
      </summary>
      <param name="typeInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> object that supplies metadata information on a type.</param>
      <param name="memberNames">An IList&lt;String&gt; list which contains the member names for display.</param>
      <returns>A string array of the reference members’ names.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetReferenceMemberNames(DevExpress.ExpressApp.DC.ITypeInfo,System.String)">
      <summary>
        <para>Returns the list of reference members’ names declared in the specified type.</para>
      </summary>
      <param name="typeInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypeInfo"/> object that supplies metadata information on a type.</param>
      <param name="memberNames">A string which contains the displayable member names, separated by semicolons.</param>
      <returns>A string array of the reference members’ names</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.GetSqlException(System.Exception)">
      <summary>
        <para>Converts the passed Exception to an SqlException that is thrown when SQL Server returns a warning or error.</para>
      </summary>
      <param name="exception">An Exception error that occurs during application execution.</param>
      <returns>An SqlException that is thrown when SQL Server returns a warning or error.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsCollectionLoaded(System.Object)">
      <summary>
        <para>Indicates whether a particular collection is loaded with objects from the database.</para>
      </summary>
      <param name="collection">An object representing the collection for which it must be determined whether it is loaded with objects from the database.</param>
      <returns>true, if the specified collection is loaded with objects from the database; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.IsConnected">
      <summary>
        <para>Indicates whether the connection of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/>‘s Object Context is open.</para>
      </summary>
      <value>true, if the <see cref="P:DevExpress.ExpressApp.EF.EFObjectSpace.ObjectContext"/> is connected to the database; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsDeletedObject(System.Object)">
      <summary>
        <para>Indicates whether the specified persistent object is deleted from the database.</para>
      </summary>
      <param name="obj">The object to be tested.</param>
      <returns>true if the specified object is deleted; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsDeletionDeferredType(System.Type)">
      <summary>
        <para>Returns a value that indicates if deferred deletion is enabled for persistent objects of a given type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> object that is a type of persistent object.</param>
      <returns>true, if deferred deletion is enabled; otherwise - false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsDisposedObject(System.Object)">
      <summary>
        <para>Determines whether an object has been disposed of.</para>
      </summary>
      <param name="obj">An object to test.</param>
      <returns>true, if the specified object has been disposed of; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsNewObject(System.Object)">
      <summary>
        <para>Indicates whether a specified object has been created but has not been saved to the database.</para>
      </summary>
      <param name="obj">An object to be tested.</param>
      <returns>true if the specified object has not been yet saved to the database; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsObjectToDelete(System.Object)">
      <summary>
        <para>Indicates whether the specified object has been deleted but not committed in the current object context.</para>
      </summary>
      <param name="obj">The persistent object to test.</param>
      <returns>true, if the specified object is marked as deleted and should be committed; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.IsObjectToSave(System.Object)">
      <summary>
        <para>Indicates whether the specified object has been added, deleted or modified, but not committed in the current object context.</para>
      </summary>
      <param name="obj">An object for which it is requested whether it should be saved.</param>
      <returns>true if the specified object has been added, deleted or modified and should be committed; false if the object has not been modified since the last commit.</returns>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.ModifiedObjects">
      <summary>
        <para>Returns a collection of objects that have been created, modified or deleted in the current object context.</para>
      </summary>
      <value>An IList collection of persistent objects that are added, deleted or modified in the transaction currently in progress.</value>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.ObjectContext">
      <summary />
      <value></value>
    </member>
    <member name="E:DevExpress.ExpressApp.EF.EFObjectSpace.ObjectStateManagerChanged">
      <summary>
        <para>Occurs when entities are added to or removed from the state manager.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.ReloadCollection(System.Object)">
      <summary>
        <para>Clears the specified collection.</para>
      </summary>
      <param name="collection">An Object that is the collection to be reloaded.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.ReloadObject(System.Object)">
      <summary>
        <para>Updates the specified object in the current Object Space’s <see cref="P:DevExpress.ExpressApp.EF.EFObjectSpace.ObjectContext"/> with data from the data source.</para>
      </summary>
      <param name="obj">An object which represents the persistent object whose state needs to be reloaded.</param>
      <returns>The object specified by the obj parameter after it has been reloaded.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.RemoveFromModifiedObjects(System.Object)">
      <summary>
        <para>Removes the specified object from the object context and then attaches it again, to remove all the tracked changes that have not been committed.</para>
      </summary>
      <param name="obj">An object to be removed from the list of modified objects.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.SetCollectionSorting(System.Object,System.Collections.Generic.IList{DevExpress.Xpo.SortProperty})">
      <summary>
        <para>Applies the specified sorting to a given collection.</para>
      </summary>
      <param name="collection">An object that is a collection to be sorted.</param>
      <param name="sorting">An IList&lt;<see cref="T:DevExpress.Xpo.SortProperty"/>&gt; object that specifies the sorting to be applied.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.SetDisplayableProperties(System.Object,System.String)">
      <summary>
        <para>Sets the properties to be visible by the specified collection.</para>
      </summary>
      <param name="collection">A collection whose visible properties are set.</param>
      <param name="displayableProperties">A semicolon-separated list of property names to be visible by a particular collection.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpace.SetPrefetchPropertyNames(System.Object,System.String[])">
      <summary>
        <para>Loads specified delayed properties and child collections in each object of a given list.</para>
      </summary>
      <param name="collection">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="propertyNames">Properties to load</param>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpace.TypeInfoSource">
      <summary />
      <value></value>
    </member>
    <member name="F:DevExpress.ExpressApp.EF.EFObjectSpace.UnableToOpenDatabaseErrorNumber">
      <summary>
        <para>An SqlException.Number value that indicates that an UnableToOpenDatabaseException occurs. By default, 4060.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider">
      <summary>
        <para>Provides an Object Space in EF 6-based XAF applications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.#ctor(System.Type,DevExpress.ExpressApp.DC.ITypesInfo,DevExpress.ExpressApp.EF.EFTypeInfoSource,System.Data.Common.DbConnection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> class with specified settings.</para>
      </summary>
      <param name="contextType">A type of a <see cref="T:System.Data.Entity.DbContext"/> descendant your application uses.</param>
      <param name="typesInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that provides access to XAF-related information on business classes.</param>
      <param name="typeInfoSource">A source of EF-related information on business classes.</param>
      <param name="connection">A <see cref="T:System.Data.Common.DbConnection"/> object that specifies the database connection.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.#ctor(System.Type,DevExpress.ExpressApp.DC.ITypesInfo,DevExpress.ExpressApp.EF.EFTypeInfoSource,System.Data.Common.DbConnection,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> class with specified settings.</para>
      </summary>
      <param name="contextType">A type of a <see cref="T:System.Data.Entity.DbContext"/> descendant your application uses.</param>
      <param name="typesInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that provides access to XAF-related information on business classes.</param>
      <param name="typeInfoSource">A source of EF-related information on business classes.</param>
      <param name="connection">A <see cref="T:System.Data.Common.DbConnection"/> object that specifies the database connection.</param>
      <param name="metadataLocations">Metadata locations specified for the connection string.</param>
      <param name="providerName">A name of a data provider specified for the connection string.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.#ctor(System.Type,DevExpress.ExpressApp.DC.ITypesInfo,DevExpress.ExpressApp.EF.EFTypeInfoSource,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> class with specified settings.</para>
      </summary>
      <param name="contextType">A type of a <see cref="T:System.Data.Entity.DbContext"/> descendant your application uses.</param>
      <param name="typesInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that provides access to XAF-related information on business classes.</param>
      <param name="typeInfoSource">A source of EF-related information on business classes.</param>
      <param name="connectionString">An application’s connection string.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.#ctor(System.Type,DevExpress.ExpressApp.DC.ITypesInfo,DevExpress.ExpressApp.EF.EFTypeInfoSource,System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> class with specified settings.</para>
      </summary>
      <param name="contextType">A type of a <see cref="T:System.Data.Entity.DbContext"/> descendant your application uses.</param>
      <param name="typesInfo">An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that provides access to XAF-related information on business classes.</param>
      <param name="typeInfoSource">A source of EF-related information on business classes.</param>
      <param name="connectionString">An application’s connection string.</param>
      <param name="metadataLocations">Metadata locations specified for the connection string.</param>
      <param name="providerName">A name of a data provider specified for the connection string.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.#ctor(System.Type,System.Data.Common.DbConnection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> class with specified settings.</para>
      </summary>
      <param name="contextType">A type of a <see cref="T:System.Data.Entity.DbContext"/> descendant your application uses.</param>
      <param name="connection">A <see cref="T:System.Data.Common.DbConnection"/> object that specifies the database connection.</param>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> class with specified settings.</para>
      </summary>
      <param name="contextType">A type of a <see cref="T:System.Data.Entity.DbContext"/> descendant your application uses.</param>
      <param name="connectionString">An application’s connection string.</param>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.CheckCompatibilityType">
      <summary>
        <para>Specifies an approach to check if the database and application are compatible.</para>
      </summary>
      <value>A Nullable&lt;<see cref="T:DevExpress.ExpressApp.CheckCompatibilityType"/>&gt; enumeration value that specifies an approach used to check if the database and application are compatible.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.CheckDatabaseSchemaCompatibility(System.Exception@)">
      <summary>
        <para>Checks if a database and application are compatible. If the database is missing or a schema needs to be updated, this method returns the corresponding exception.</para>
      </summary>
      <param name="exception">An exception that</param>
      <returns>An enumeration value that indicates if a database and application are compatible.</returns>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.Connection">
      <summary>
        <para>Specifies the connection type the current Object Space Provider uses.</para>
      </summary>
      <value>A <see cref="T:System.Data.Common.DbConnection"/> object that specifies the connection type the current Object Space Provider uses.</value>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.ConnectionString">
      <summary>
        <para>Specifies the connection string used to access a database.</para>
      </summary>
      <value>A connection string used to access a database.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.CreateObjectSpace">
      <summary>
        <para>Creates a <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpace"/> instance.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.CreateUpdatingObjectSpace(System.Boolean)">
      <summary>
        <para>Creates an Object Space to be used to update the database.</para>
      </summary>
      <param name="allowUpdateSchema">true if the schema update is allowed; otherwise, false.</param>
      <returns>A created Object Space to be used to update the database.</returns>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.DeleteDatabase">
      <summary>
        <para>Deletes the database specified in the <see cref="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.ConnectionString"/> or <see cref="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.Connection"/> property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.Dispose">
      <summary>
        <para>Releases all resources that the current <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/> object uses.</para>
      </summary>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.EntityStore">
      <summary>
        <para>Provides access to the storage of registered entities.</para>
      </summary>
      <value>An object that implements the IEntityStore interface and provides information on registered entities.</value>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.ModuleInfoType">
      <summary>
        <para>Gets the type of the class that is mapped to the ModuleInfo table in the database.</para>
      </summary>
      <value>A type of class that corresponds to the ModuleInfo database table.</value>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.SchemaUpdateMode">
      <summary>
        <para>Specifies how to check compatibility for the database associated with the current <see cref="T:DevExpress.ExpressApp.EF.EFObjectSpaceProvider"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.ExpressApp.SchemaUpdateMode"/> enumeration value that specifies how to check database compatibility.</value>
    </member>
    <member name="E:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.SchemaUpdating">
      <summary>
        <para>Occurs before a database is created or updated. This event allows you to replace the default update mechanism with a custom one.</para>
      </summary>
    </member>
    <member name="P:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.TypesInfo">
      <summary>
        <para>Supplies XAF-related information on types used in the application.</para>
      </summary>
      <value>An <see cref="T:DevExpress.ExpressApp.DC.ITypesInfo"/> object that provides access to XAF-related information on business classes.</value>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.EFObjectSpaceProvider.UpdateSchema">
      <summary>
        <para>Updates a database schema to a new version or creates a new database.</para>
      </summary>
    </member>
    <member name="N:DevExpress.ExpressApp.EF.Utils">
      <summary>
        <para>Contains helper classes used to provide Entity Framework support in XAF.</para>
      </summary>
    </member>
    <member name="T:DevExpress.ExpressApp.EF.Utils.DelayedAttribute">
      <summary>
        <para>Applied to reference properties of Entity Framework classes. Indicates that the property value should not be loaded when an entity object is being loaded. The property will be loaded the first time it is accessed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.ExpressApp.EF.Utils.DelayedAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.ExpressApp.EF.Utils.DelayedAttribute"/> class.</para>
      </summary>
    </member>
  </members>
</doc>